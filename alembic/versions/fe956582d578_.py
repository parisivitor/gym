"""empty message

Revision ID: fe956582d578
Revises: d2f0437e452f
Create Date: 2023-03-11 22:30:38.729331

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fe956582d578'
down_revision = 'd2f0437e452f'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category_type',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('nome', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('nome'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('execution_type',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('nome', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('nome'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('exercise',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('example', sa.String(length=250), nullable=True),
    sa.Column('uuid_exercise_type', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['uuid_exercise_type'], ['exercise.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('exercise_type',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('nome', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('nome'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('measure_type',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('nome', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('nome'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('train',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('planned',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('goal', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=50), nullable=True),
    sa.Column('start_date', sa.TIMESTAMP(), nullable=False),
    sa.Column('end_date', sa.TIMESTAMP(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('uuid_person', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['uuid_person'], ['person.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('train_category_type',
    sa.Column('uuid_train', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('uuid_category_type', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['uuid_category_type'], ['category_type.uuid'], ),
    sa.ForeignKeyConstraint(['uuid_train'], ['train.uuid'], ),
    sa.PrimaryKeyConstraint('uuid_train', 'uuid_category_type')
    )
    op.create_table('workout',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('repeats', sa.String(length=10), nullable=False),
    sa.Column('measure', sa.String(length=10), nullable=False),
    sa.Column('rest_time', sa.String(length=10), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('uuid_exercise', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('uuid_measure_type', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('uuid_execution_type', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['uuid_execution_type'], ['execution_type.uuid'], ),
    sa.ForeignKeyConstraint(['uuid_exercise'], ['exercise.uuid'], ),
    sa.ForeignKeyConstraint(['uuid_measure_type'], ['measure_type.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('planned_train',
    sa.Column('uuid_planned', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('uuid_train', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['uuid_planned'], ['planned.uuid'], ),
    sa.ForeignKeyConstraint(['uuid_train'], ['train.uuid'], ),
    sa.PrimaryKeyConstraint('uuid_planned', 'uuid_train')
    )
    op.create_table('train_workout',
    sa.Column('uuid_train', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('uuid_workout', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['uuid_train'], ['train.uuid'], ),
    sa.ForeignKeyConstraint(['uuid_workout'], ['workout.uuid'], ),
    sa.PrimaryKeyConstraint('uuid_train', 'uuid_workout')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('train_workout')
    op.drop_table('planned_train')
    op.drop_table('workout')
    op.drop_table('train_category_type')
    op.drop_table('planned')
    op.drop_table('train')
    op.drop_table('measure_type')
    op.drop_table('exercise_type')
    op.drop_table('exercise')
    op.drop_table('execution_type')
    op.drop_table('category_type')
    # ### end Alembic commands ###
